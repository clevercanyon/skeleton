#!/usr/bin/env node
/**
 * Jest config.
 *
 * Jest is not aware of this config file's location.
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * @note This entire file will be updated automatically.
 * @note Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 *
 * @see https://jestjs.io/docs/configuration
 */

import fs from 'node:fs';
import u from '../../resources/utilities.mjs';

/**
 * Defines Jest configuration.
 */
export default async () => {
    /**
     * Composition.
     */
    return {
        roots: [
            ...(fs.existsSync(u.srcDir) ? [u.srcDir] : []), //
            ...(fs.existsSync(u.testsDir) ? [u.testsDir] : []),
            ...(!fs.existsSync(u.srcDir) && !fs.existsSync(u.testsDir) ? [u.projDir] : []),
        ],
        testPathIgnorePatterns: u.exclusions.asRegExpStrings([
            ...new Set([
                ...u.exclusions.localIgnores,
                ...u.exclusions.logIgnores,
                ...u.exclusions.backupIgnores,
                ...u.exclusions.patchIgnores,
                ...u.exclusions.editorIgnores,
                ...u.exclusions.toolingIgnores,
                ...u.exclusions.pkgIgnores,
                ...u.exclusions.vcsIgnores,
                ...u.exclusions.osIgnores,
                ...u.exclusions.dotIgnores,
                ...u.exclusions.dtsIgnores,
                ...u.exclusions.configIgnores,
                ...u.exclusions.lockIgnores,
                ...u.exclusions.devIgnores,
                ...u.exclusions.distIgnores,
                ...u.exclusions.sandboxIgnores,
                ...u.exclusions.exampleIgnores,
                ...u.exclusions.docIgnores,
                ...u.exclusions.benchIgnores,
                ...u.exclusions.adhocExIgnores,
            ]),
        ]),
        // Configured to run JS tests only; not TypeScript tests.
        // To create and run TypeScript tests, use Vitest instead of Jest.
        testMatch: [
            '**/*.{test|tests|spec|specs}.' + u.extensions.asBracedGlob([...u.extensions.byDevGroup.allJavaScript]), //
            '**/{test,tests,spec,specs}/**/*.' + u.extensions.asBracedGlob([...u.extensions.byDevGroup.allJavaScript]),
        ],
        moduleNameMapper: await u.importAliases.asRegExpStrings(),
        moduleFileExtensions: u.extensions.noDot([...u.extensions.byDevGroup.allJavaScript]),
        extensionsToTreatAsEsm: [
            ...('module' === u.pkgType
                ? [
                      ...u.extensions.byDevGroup.sJavaScript,
                      ...u.extensions.byDevGroup.sJavaScriptReact,
                      ...u.extensions.byDevGroup.mJavaScript,
                      ...u.extensions.byDevGroup.mJavaScriptReact,
                  ]
                : [...u.extensions.byDevGroup.mJavaScript, ...u.extensions.byDevGroup.mJavaScriptReact]),
        ].filter((ext) => ext !== '.mjs'), // Jest complains that `.mjs` is always treated as ESM, so we exclude it here.
    };
};
