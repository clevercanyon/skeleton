/**
 * Tailwind themes config file.
 *
 * Tailwind is not aware of this config file's location. This configuration file serves as a base for theme
 * configurations passed into the `tailwindcss-themer` plugin, which implements themes for Tailwind CSS.
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * @note This entire file will be updated automatically.
 * @note Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 */

import { $color, $is, $obj } from '../../../node_modules/@clevercanyon/utilities/dist/index.js';

/**
 * Defines Tailwind themes configuration.
 *
 * Jiti, which is used by Tailwind to load ESM config files, doesn’t support top-level await. Thus, we cannot use async
 * functionality here. Consider `make-synchronous` (already in dev-deps) if necessary. {@see https://o5p.me/1odhxy}.
 */
export default /* not async compatible */ ({ themesConfig } = {}) => {
    /**
     * Basic colors.
     */
    let basicColors; // Initialize.

    if ($is.function(themesConfig)) {
        basicColors = themesConfig().defaultTheme?.extend?.colors;
        basicColors = $obj.pick(basicColors || {}, ['c-bg', 'c-fg', 'c-link', 'c-heading']);
    }
    basicColors = $obj.defaults({}, basicColors || {}, {
        'c-bg': $color.tw('zinc', 50),
        'c-fg': $color.tw('zinc', 950),
        'c-link': $color.tw('blue', 900),
        'c-heading': $color.tw('stone', 950),
    });

    /**
     * Themes configuration.
     */
    const defaultTheme = {
        extend: {
            fontFamily: {
                sans: [
                    'Georama', //
                    'ui-sans-serif',
                    'sans-serif',
                ],
                serif: [
                    'Palatino', //
                    '"Palatino Linotype"',
                    'ui-serif',
                    'serif',
                ],
                mono: [
                    '"Operator Mono"', //
                    'ui-monospace',
                    'monospace',
                ],
            },
            colors: {
                ...basicColors,

                'c-prose-body': basicColors['c-fg'],
                'c-prose-links': basicColors['c-link'],

                'c-prose-headings': basicColors['c-heading'],
                'c-prose-lead': $color.darken(basicColors['c-fg'], 0.1),
                'c-prose-bold': $color.darken(basicColors['c-fg'], 0.1),

                'c-prose-counters': $color.lighten(basicColors['c-fg'], 0.35),
                'c-prose-bullets': $color.lighten(basicColors['c-fg'], 0.35),

                'c-prose-quotes': $color.lighten(basicColors['c-fg'], 0.05),
                'c-prose-quote-borders': $color.lighten(basicColors['c-fg'], 0.85),

                'c-prose-kbd': $color.darken(basicColors['c-fg'], 0.05),
                // This is incorporated into an `rgb(x x x / x)` final color.
                'c-prose-kbd-shadows': $color.toRGBListNoAlpha(basicColors['c-fg']),

                'c-prose-code': $color.lighten(basicColors['c-fg'], 0.05),
                // This is incorporated into an `rgb(x x x / x)` final color.
                'c-prose-code-shadows': $color.toRGBListNoAlpha(basicColors['c-fg']),

                'c-prose-pre-bg': $color.lighten(basicColors['c-fg'], 0.1),
                'c-prose-pre-code': $color.lighten(basicColors['c-bg'], 0.1),

                'c-prose-th-borders': $color.lighten(basicColors['c-fg'], 0.75),
                'c-prose-td-borders': $color.lighten(basicColors['c-fg'], 0.85),

                'c-prose-hr': $color.lighten(basicColors['c-fg'], 0.85),
                'c-prose-captions': $color.lighten(basicColors['c-fg'], 0.25),
            },
            typography: {
                DEFAULT: {
                    css: {
                        // Points prose at theme colors.

                        '--tw-prose-body': 'rgb(var(--colors-c-prose-body))',
                        '--tw-prose-links': 'rgb(var(--colors-c-prose-links))',

                        '--tw-prose-headings': 'rgb(var(--colors-c-prose-headings))',
                        '--tw-prose-lead': 'rgb(var(--colors-c-prose-lead))',
                        '--tw-prose-bold': 'rgb(var(--colors-c-prose-bold))',

                        '--tw-prose-counters': 'rgb(var(--colors-c-prose-counters))',
                        '--tw-prose-bullets': 'rgb(var(--colors-c-prose-bullets))',

                        '--tw-prose-quotes': 'rgb(var(--colors-c-prose-quotes))',
                        '--tw-prose-quote-borders': 'rgb(var(--colors-c-prose-quote-borders))',

                        '--tw-prose-kbd': 'rgb(var(--colors-c-prose-kbd))',
                        '--tw-prose-kbd-shadows': 'var(--colors-c-prose-kbd-shadows)',

                        '--tw-prose-code': 'rgb(var(--colors-c-prose-code))',
                        '--tw-prose-code-shadows': 'var(--colors-c-prose-code-shadows)',

                        '--tw-prose-pre-bg': 'rgb(var(--colors-c-prose-pre-bg))',
                        '--tw-prose-pre-code': 'rgb(var(--colors-c-prose-pre-code))',

                        '--tw-prose-th-borders': 'rgb(var(--colors-c-prose-th-borders))',
                        '--tw-prose-td-borders': 'rgb(var(--colors-c-prose-td-borders))',

                        '--tw-prose-hr': 'rgb(var(--colors-c-prose-hr))',
                        '--tw-prose-captions': 'rgb(var(--colors-c-prose-captions))',

                        // Not using inverted colors; i.e., we prefer themes.
                        // The use of `null` effectively deletes these unused keys.

                        '--tw-prose-invert-body': null,
                        '--tw-prose-invert-links': null,

                        '--tw-prose-invert-headings': null,
                        '--tw-prose-invert-lead': null,
                        '--tw-prose-invert-bold': null,

                        '--tw-prose-invert-counters': null,
                        '--tw-prose-invert-bullets': null,

                        '--tw-prose-invert-quotes': null,
                        '--tw-prose-invert-quote-borders': null,

                        '--tw-prose-invert-kbd': null,
                        '--tw-prose-invert-kbd-shadows': null,

                        '--tw-prose-invert-code': null,
                        '--tw-prose-invert-code-shadows': null,

                        '--tw-prose-invert-pre-bg': null,
                        '--tw-prose-invert-pre-code': null,

                        '--tw-prose-invert-th-borders': null,
                        '--tw-prose-invert-td-borders': null,

                        '--tw-prose-invert-hr': null,
                        '--tw-prose-invert-captions': null,
                    },
                },
            },
        },
    };

    /**
     * Other theme configurations.
     *
     * @note These will always extend the default theme above.
     * ---
     * @note Don’t name a theme `dark`; {@see https://o5p.me/jLROv0}.
     *       Best practice is to end theme names with a `-theme` suffix.
     * ---
     * @note Don’t add themes unnecessarily. A default theme will typically do fine.
     *       The more themes you add, the larger your bundle size will become.
     */
    const themes = []; // None at this time.

    /**
     * Composition.
     */
    return { defaultTheme, themes };
};
