/**
 * Starry night styles.
 */
@mixin styles {
    /*
     * Colors.
     */
    :root {
        // Highlighted bg/fg colors.
        --color-starry-night: rgb(var(--colors-color-starry-night));
        --color-starry-night-fg: rgb(var(--colors-color-starry-night-fg));

        // Highlighted presentation colors.
        --color-starry-night-border: rgb(var(--colors-color-starry-night-border));
        --color-starry-night-box-shadow: rgb(var(--colors-color-starry-night-box-shadow));
        --color-starry-night-hilited-lines: rgb(var(--colors-color-starry-night-hilited-lines));

        // Highlighted header colors.
        --color-starry-night-header: rgb(var(--colors-color-starry-night-header));
        --color-starry-night-header-fg: rgb(var(--colors-color-starry-night-header-fg));

        // Highlighted header language colors.
        --color-starry-night-header-language: rgb(var(--colors-color-starry-night-header-language));
        --color-starry-night-header-language-fg: rgb(var(--colors-color-starry-night-header-language-fg));

        // Script comments, gutter marks, punctuation.
        --color-starry-night-syntax-comment-fg: rgb(var(--colors-color-starry-night-syntax-comment-fg));
        --color-starry-night-syntax-gutter-mark-fg: rgb(var(--colors-color-starry-night-syntax-gutter-mark-fg));
        --color-starry-night-syntax-punctuation-fg: rgb(var(--colors-color-starry-night-syntax-punctuation-fg));

        // Script keywords, constants, variables, strings, etc.
        --color-starry-night-syntax-keyword-fg: rgb(var(--colors-color-starry-night-syntax-keyword-fg));
        --color-starry-night-syntax-constant-fg: rgb(var(--colors-color-starry-night-syntax-constant-fg));
        --color-starry-night-syntax-variable-fg: rgb(var(--colors-color-starry-night-syntax-variable-fg));
        --color-starry-night-syntax-storage-fg: rgb(var(--colors-color-starry-night-syntax-storage-fg));
        --color-starry-night-syntax-entity-fg: rgb(var(--colors-color-starry-night-syntax-entity-fg));
        --color-starry-night-syntax-entity-tag-fg: rgb(var(--colors-color-starry-night-syntax-entity-tag-fg));
        --color-starry-night-syntax-other-link-fg: rgb(var(--colors-color-starry-night-syntax-other-link-fg));
        --color-starry-night-syntax-string-fg: rgb(var(--colors-color-starry-night-syntax-string-fg));
        --color-starry-night-syntax-regexp-fg: rgb(var(--colors-color-starry-night-syntax-regexp-fg));

        // Markdown headings and operators.
        --color-starry-night-syntax-md-heading-fg: rgb(var(--color-starry-night-syntax-entity-tag-fg));
        --color-starry-night-syntax-markup-operator-fg: rgb(var(--color-starry-night-syntax-punctuation-fg));

        // Range notation in a diff/patch.
        --color-starry-night-syntax-meta-diff-range-fg: rgb(var(--colors-color-dazzle));

        // Old removed lines in a diff/patch.
        --color-starry-night-syntax-markup-deleted: rgb(var(--colors-color-danger));
        --color-starry-night-syntax-markup-deleted-fg: rgb(var(--colors-color-danger-fg));

        // New added lines in a diff/patch.
        --color-starry-night-syntax-markup-inserted: rgb(var(--colors-color-success));
        --color-starry-night-syntax-markup-inserted-fg: rgb(var(--colors-color-success-fg));

        // Changed lines in a diff/patch.
        --color-starry-night-syntax-markup-changed: rgb(var(--colors-color-warning));
        --color-starry-night-syntax-markup-changed-fg: rgb(var(--colors-color-warning-fg));

        // Ignored lines in a diff/patch.
        --color-starry-night-syntax-markup-ignored: rgb(var(--colors-color-neutral));
        --color-starry-night-syntax-markup-ignored-fg: rgb(var(--colors-color-neutral-fg));

        // Illegal, broken, or unrecognized syntax.
        --color-starry-night-syntax-invalid-illegal: rgb(var(--colors-color-danger));
        --color-starry-night-syntax-invalid-illegal-fg: rgb(var(--colors-color-danger-fg));

        // Untested. Seems related to whitespace.
        --color-starry-night-syntax-carriage-return: rgb(var(--colors-color-dark));
        --color-starry-night-syntax-carriage-return-fg: rgb(var(--colors-color-dark-fg));

        // Untested, seems related to HTML.
        --color-starry-night-syntax-bracket-angle-fg: rgb(var(--colors-color-dazzle));
        --color-starry-night-syntax-bracket-unmatched-fg: rgb(var(--colors-color-dazzle));
    }

    /*
     * Rehype plugin {@see https://o5p.me/fSI3OT}.
     * The `.highlight*` classes are generated by plugin.
     */

    .highlight {
        overflow: hidden;
        line-height: 1em;
        background: var(--color-starry-night);
        border: 1px solid var(--color-starry-night-border);
        border-radius: 0.375rem;
    }

    .highlight-header {
        display: flex;
        gap: 0.5em;
        align-items: center;
        padding: 0.5em;
        color: var(--color-starry-night-header-fg);
        background: var(--color-starry-night-header);
        border-block-end: 1px solid var(--color-starry-night-border);
        border-radius: 0.375rem 0.375rem 0 0;
    }

    .highlight-language {
        padding: 0.25em 0.5em 0.15em;
        font-family: ui-monospace, monospace;
        font-size: 0.75em;
        color: var(--color-starry-night-header-language-fg);
        text-transform: uppercase;
        background: var(--color-starry-night-header-language);
        border-radius: 0.1875rem;
    }

    .highlight pre {
        padding: 0.8571em 0;
        margin: 0;
        background: none;
        border-radius: 0;
        box-shadow: inset 0 0 2px 2px var(--color-starry-night-box-shadow);
    }

    .highlight pre > code {
        display: grid;
        color: var(--color-starry-night-fg);
    }

    .highlight pre .line {
        padding-inline: 1.1428em;
    }

    .highlight pre .line:focus:not(:focus-visible),
    .highlight pre .line:hover {
        background: var(--color-starry-night-hilited-lines);
    }

    .highlight pre .line[data-highlighted] {
        background: var(--color-starry-night-hilited-lines);
        border-inline-start: 2px solid var(--color-starry-night-syntax-comment-fg);
    }

    .highlight pre .line[data-highlighted] .line-number {
        color: var(--color-starry-night-syntax-comment-fg);
    }

    .highlight pre .line .line-number {
        margin-inline-end: 1em;
        color: var(--color-starry-night-syntax-gutter-mark-fg);
        user-select: none;
    }

    .highlight pre .line .line-prompt::before {
        display: inline-block;
        width: 1em;
        height: 1em;
        margin-inline: -0.175em 0.35em;
        vertical-align: middle;
        content: '';
        background: var(--color-starry-night-syntax-comment-fg);
        mask-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' fill-rule='evenodd' clip-rule='evenodd' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M17.179 5.597C13.491 3.081 5.957 3.057 6.344 8.186c.399 5.287 11.204 1.813 11.566 7.102.369 5.375-8 5.71-11.832 2.666M12.017 2v20'/%3E%3C/svg%3E");
        mask-repeat: no-repeat;
        mask-position: top center;
        mask-size: contain;
    }

    /*
     * Pretty lights syntax; {@see https://o5p.me/i6E6m1}.
     * The `.pl*` syntax classes are generated by pretty lights.
     */

    .pl-c {
        color: var(--color-starry-night-syntax-comment-fg);
    }

    .pl-c1,
    .pl-s .pl-v {
        color: var(--color-starry-night-syntax-constant-fg);
    }

    .pl-e,
    .pl-en {
        color: var(--color-starry-night-syntax-entity-fg);
    }

    .pl-smi,
    .pl-s .pl-s1 {
        color: var(--color-starry-night-syntax-storage-fg);
    }

    .pl-ent {
        color: var(--color-starry-night-syntax-entity-tag-fg);
    }

    .pl-k {
        color: var(--color-starry-night-syntax-keyword-fg);
    }

    .pl-pds,
    .pl-ms {
        color: var(--color-starry-night-syntax-punctuation-fg);
    }

    .pl-s,
    .pl-s .pl-pse .pl-s1,
    .pl-sr,
    .pl-sr .pl-cce,
    .pl-sr .pl-sre,
    .pl-sr .pl-sra {
        color: var(--color-starry-night-syntax-string-fg);
    }

    .pl-v,
    .pl-smw {
        color: var(--color-starry-night-syntax-variable-fg);
    }

    .pl-bu {
        color: var(--color-starry-night-syntax-bracket-unmatched-fg);
    }

    .pl-ii {
        color: var(--color-starry-night-syntax-invalid-illegal-fg);
        background: var(--color-starry-night-syntax-invalid-illegal);
    }

    .pl-c2 {
        color: var(--color-starry-night-syntax-carriage-return-fg);
        background: var(--color-starry-night-syntax-carriage-return);
    }

    .pl-sr .pl-cce {
        font-weight: bold;
        color: var(--color-starry-night-syntax-regexp-fg);
    }

    .pl-ml {
        color: var(--color-starry-night-syntax-markup-operator-fg);
    }

    .pl-mh,
    .pl-mh .pl-en {
        font-weight: bold;
        color: var(--color-starry-night-syntax-md-heading-fg);
    }

    .pl-mi {
        font-style: italic;
    }

    .pl-mb {
        font-weight: bold;
    }

    .pl-md {
        color: var(--color-starry-night-syntax-markup-deleted-fg);
        background: var(--color-starry-night-syntax-markup-deleted);
    }

    .pl-mi1 {
        color: var(--color-starry-night-syntax-markup-inserted-fg);
        background: var(--color-starry-night-syntax-markup-inserted);
    }

    .pl-mc {
        color: var(--color-starry-night-syntax-markup-changed-fg);
        background: var(--color-starry-night-syntax-markup-changed);
    }

    .pl-mi2 {
        color: var(--color-starry-night-syntax-markup-ignored-fg);
        background: var(--color-starry-night-syntax-markup-ignored);
    }

    .pl-mdr {
        font-weight: bold;
        color: var(--color-starry-night-syntax-meta-diff-range-fg);
    }

    .pl-ba {
        color: var(--color-starry-night-syntax-bracket-angle-fg);
    }

    .pl-sg {
        color: var(--color-starry-night-syntax-gutter-mark-fg);
    }

    .pl-corl {
        color: var(--color-starry-night-syntax-other-link-fg);
        text-decoration: underline;
    }
}
