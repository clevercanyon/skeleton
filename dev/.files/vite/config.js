/**
 * Vite config file.
 *
 * @since 1.0.0
 *
 * @note Vite is not aware of this config file's location.
 *
 * @see https://vitejs.dev/config/
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * This entire file will be updated automatically.
 * - Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 */
/* eslint-env es2021, node */

import desm from 'desm';
import path from 'path';
import fs   from 'fs-extra';

import { loadEnv }    from 'vite';
import aliases        from './includes/aliases';
import pluginBasicSSL from '@vitejs/plugin-basic-ssl';

export default async ( { mode } /* { command, mode, ssrBuild } */ ) => {
	const __dirname = desm( import.meta.url );
	const projDir   = path.resolve( __dirname, '../../..' );
	const srcDir    = path.resolve( __dirname, '../../../src' );

	const env = loadEnv( mode, process.cwd(), '' );
	const pkg = await fs.readJson( path.resolve( projDir, './package.json' ) );

	let libName = pkg.name || '';
	libName     = libName.toLowerCase();
	libName     = libName.replace( /\bclevercanyon\b/ug, 'c10n' );
	libName     = libName.replace( /@/ug, '' ).replace( /\./ug, '-' ).replace( /\/+/ug, '.' );
	libName     = libName.replace( /[^a-z.0-9]([^.])/ug, ( m0, m1 ) => m1.toUpperCase() );
	libName     = libName.replace( /^\.|\.$/u, '' );

	const entryIndexes = []; // Initialize.
	[ '.shtml', '.html', '.tsx', '.ts', '.jsx', '.mjs', '.js', '.cjs', '.scss', '.css' ].forEach( ( ext ) => {
		if ( fs.existsSync( path.resolve( projDir, './src/index' + ext ) ) ) {
			entryIndexes.push( './index' + ext ); // Relative to `root` dir.
		}
	} );
	return {
		c10n      : {
			defaults : {
				lib : {
					name  : libName,      // Global variable.
					entry : entryIndexes, // Relative to `root`.
				},
			},
		},
		root      : srcDir, // Absolute; where entry indexes live.
		publicDir : './public', // Static assets relative to `root`.
		base      : '/', // Analagous to `<base href="/">`.

		appType : 'custom', // <https://vitejs.dev/config/shared-options.html#apptype>
		resolve : { alias : aliases }, // See also: `../typescript/config.json`.

		envDir    : '../', // Where `.env` files live. Relative to `root`.
		envPrefix : 'APP_', // These are part of app; i.e., visible client-side.

		build   : {         // <https://vitejs.dev/config/build-options.html>
			emptyOutDir : true, // Start clean. Must set as `true` explicitly.
			sourcemap   : false, // Enable to produce sourcemaps.

			target : 'es2021', // Match our typescript config.

			outDir    : '../dist', // Relative to `root`.
			assetsDir : './assets/g7d', // Relative to `outDir`.

			rollupOptions            : {},
			commonjsOptions          : {},
			dynamicImportVarsOptions : {},
		},
		define  : {
			$$__APP_PKG_NAME__$$    : pkg.name || '',
			$$__APP_PKG_VERSION__$$ : pkg.version || '',
			$$__APP_PKG_REPO__$$    : pkg.repository || '',
			...env, // Rest of environment vars.
		},
		server  : { open : true, https : true },
		plugins : [ pluginBasicSSL() ],
	};
};
