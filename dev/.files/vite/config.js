/**
 * Vite config file.
 *
 * @since 1.0.0
 *
 * @note Vite is not aware of this config file's location.
 *
 * @see https://vitejs.dev/config/
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * This file will be updated automatically.
 * - Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 */
/* eslint-env es2021, node */

import desm from 'desm';
import path from 'path';
import fs   from 'fs-extra';

import postcss        from './postcss';
import aliases        from './aliases';
import pluginBasicSSL from '@vitejs/plugin-basic-ssl';

export default async ( /* { command, mode, ssrBuild } */ ) => {
	const __dirname = desm( import.meta.url );
	const projDir   = path.resolve( __dirname, '../../..' );
	const srcDir    = path.resolve( __dirname, '../../../src' );
	const pkg       = await fs.readJson( path.resolve( projDir, './package.json' ) );

	let libName = pkg.name || '';
	libName     = libName.toLowerCase();
	libName     = libName.replace( /\bclevercanyon\b/ug, 'c10n' );
	libName     = libName.replace( /@/ug, '' ).replace( /\./ug, '-' ).replace( /\/+/ug, '.' );
	libName     = libName.replace( /[^a-z.0-9]([^.])/ug, ( m0, m1 ) => m1.toUpperCase() );
	libName     = libName.replace( /^\.|\.$/u, '' );

	const entryIndexes = []; // Initialize.

	[ '.shtml', '.html', '.tsx', '.ts', '.jsx', '.mjs', '.js', '.cjs', '.scss', '.css' ].every( ( ext ) => {
		if ( fs.existsSync( path.resolve( projDir, './src/index' + ext ) ) ) {
			entryIndexes.push( './index' + ext ); // Relative to `root` dir.
			return false; // Break.
		}
		return true; // Continue.
	} );
	if ( ! entryIndexes.length ) {
		return; // No indexes available.
	}
	return {
		root      : srcDir,     // Where entry indexes live. Absolute path.
		envDir    : '../',      // Where `.env` files live. Relative to `root` dir.
		publicDir : './assets', // Relative to `root` dir.

		appType : 'spa',        // <https://vitejs.dev/config/shared-options.html#apptype>
		base    : '/',          // Analagous to `<base href="/">`.

		resolve : { alias : aliases },
		css     : { postcss : postcss( srcDir ) },

		build   : {
			sourcemap                : true,
			target                   : 'es2021',
			outDir                   : '../dist',
			assetsDir                : './assets/g7d',
			lib                      : {
				name     : libName,
				entry    : entryIndexes, // Relative to `root` dir.
				fileName : ( format, entryName ) => {
					return format + '.' + entryName;
				},
			},
			optimizeDeps             : [
				'!**/.*',
				'!**/__*',
				'!**/dist/**',
				'!**/node_modules/**',
				...entryIndexes, // Relative to `root` dir.
			],
			rollupOptions            : {},
			commonjsOptions          : {},
			dynamicImportVarsOptions : {},
		},
		define  : {
			$$__APP_PKG_NAME__$$    : pkg.name || '',
			$$__APP_PKG_VERSION__$$ : pkg.version || '',
			$$__APP_PKG_REPO__$$    : pkg.repository || '',
			$$__APP_PKG_LICENSE__$$ : pkg.license || '',
		},
		server  : { open : true, https : true },
		plugins : [ pluginBasicSSL() ],
	};
};
